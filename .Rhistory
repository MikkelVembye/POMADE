usethis::use_r("effective_sample_sizes")
use_git()
library(devtools)
library(roxygen2)
usethis::use_git()
devtools::load_all()
PMADE::effective_sample_sizes(100)
exists("effective_sample_sizes", where = globalenv(), inherits = FALSE)
devtools::check()
usethis::use_mit_license()
devtools::document()
devtools::install()
library(POMADE)
?effective_sample_sizes
library(POMADE)
?effective_sample_sizes
devtools::install()
library(POMADE)
?effective_sample_sizes
devtools::document()
devtools::install()
library(POMADE)
?effective_sample_sizes
devtools::load_all()
?effective_sample_sizes
sample_sizes <- sample(50:1000, 50, replace = TRUE)
effective_sample_sizes(sample_sizes_raw = sample_sizes)
devtools::document()
metafor::rma.mv()
devtools::install()
library(POMADE)
?effective_sample_sizes
devtools::document()
devtools::install()
library(POMADE)
devtools::load_all()
?effective_sample_sizes
sample_sizes <- sample(50:1000, 50, replace = TRUE)
effective_sample_sizes(sample_sizes_raw = sample_sizes)
usethis::use_package("dplyr")
usethis::use_package("grid")
usethis::use_package("stats")
usethis::use_package("utils")
usethis::use_testthat()
usethis::use_test("effective_sample_sizes")
test_that("effective_sample_sizes converts raw sample sizes correctly", {
expect_equal(effective_sample_sizes(sample_sizes_raw = 100), 18)
})
library(testthat)
test_that("effective_sample_sizes converts raw sample sizes correctly", {
expect_equal(effective_sample_sizes(sample_sizes_raw = 100), 18)
})
usethis::use_readme_rmd()
devtools::install()
sample_sizes <- sample(50:1000, 50, replace = TRUE)
effective_sample_sizes(sample_sizes_raw = sample_sizes)
devtools::load_all()
devtools::install()
library(POMADE)
?effect
?effective_sample_sizes
devtools::load_all()
?effective_sample_sizes
devtools::install()
library(POMADE)
?effective_sample_sizes
library(roxygen2)
load_all()
POMADE::effective_sample_sizes(100)
power_CHE_engine(
J = 70,
tau2 = 0.1,
omega2 = 0.2,
beta = 0.1,
rho = 0.7,
sample_sizes = 100,
kj = 5,
var_df = c("Model", "Satt","RVE")
)
install()
library(POMADE)
?effective_sample_sizes
library(usethis)
usethis::gh_token_help()
